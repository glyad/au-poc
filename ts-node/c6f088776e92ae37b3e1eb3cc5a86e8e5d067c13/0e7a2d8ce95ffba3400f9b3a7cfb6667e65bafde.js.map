{"version":3,"file":"/Users/David/TempProjects/poc/webpack.config.ts","sources":["/Users/David/TempProjects/poc/webpack.config.ts"],"names":[],"mappings":"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","sourcesContent":["import { Aurelia } from 'aurelia-framework';\n/// <reference path=\"./node_modules/@types/node/index.d.ts\" />\n/**\n * To learn more about how to use Easy Webpack\n * Take a look at the README here: https://github.com/easy-webpack/core\n **/\nimport { generateConfig, get, stripMetadata, EasyWebpackConfig } from '@easy-webpack/core';\nimport { CheckerPlugin } from \"awesome-typescript-loader\";\nimport * as path from 'path';\n\nimport * as envProd from '@easy-webpack/config-env-production';\nimport * as envDev from '@easy-webpack/config-env-development';\nimport * as aurelia from '@easy-webpack/config-aurelia';\nimport * as typescript from '@easy-webpack/config-typescript';\nimport * as html from '@easy-webpack/config-html';\nimport * as css from '@easy-webpack/config-css';\nimport * as fontAndImages from '@easy-webpack/config-fonts-and-images';\nimport * as globalBluebird from '@easy-webpack/config-global-bluebird';\nimport * as globalJquery from '@easy-webpack/config-global-jquery';\nimport * as generateIndexHtml from '@easy-webpack/config-generate-index-html';\nimport * as commonChunksOptimize from '@easy-webpack/config-common-chunks-simple';\nimport * as copyFiles from '@easy-webpack/config-copy-files';\nimport * as uglify from '@easy-webpack/config-uglify';\nimport * as generateCoverage from '@easy-webpack/config-test-coverage-istanbul';\n\nconst ENV: 'development' | 'production' | 'test' = process.env.NODE_ENV && process.env.NODE_ENV.toLowerCase() || (process.env.NODE_ENV = 'development');\n\n// basic configuration:\nconst title = 'Hello Aurelia!';\nconst baseUrl = '/';\nconst rootDir = path.resolve();\nconst srcDir = path.resolve('src');\nconst outDir = path.resolve('dist');\n\nconst coreBundles = {\n  bootstrap: [\n    'aurelia-bootstrapper-webpack',\n    'aurelia-polyfills',\n    'aurelia-pal',\n    'aurelia-pal-browser',\n    'bluebird'\n  ],\n  // these will be included in the 'aurelia' bundle (except for the above bootstrap packages)\n  aurelia: [\n    'aurelia-bootstrapper-webpack',\n    'aurelia-binding',\n    'aurelia-dependency-injection',\n    'aurelia-event-aggregator',\n    'aurelia-framework',\n    'aurelia-history',\n    'aurelia-history-browser',\n    'aurelia-loader',\n    'aurelia-loader-webpack',\n    'aurelia-logging',\n    'aurelia-logging-console',\n    'aurelia-metadata',\n    'aurelia-pal',\n    'aurelia-pal-browser',\n    'aurelia-path',\n    'aurelia-polyfills',\n    'aurelia-route-recognizer',\n    'aurelia-router',\n    'aurelia-task-queue',\n    'aurelia-templating',\n    'aurelia-templating-binding',\n    'aurelia-templating-router',\n    'aurelia-templating-resources'\n  ]\n}\n\n/**\n * Main Webpack Configuration\n */\nlet config = generateConfig(\n  {\n    entry: {\n      'app': ['./src/main' /* this is filled by the aurelia-webpack-plugin */],\n      'aurelia-bootstrap': coreBundles.bootstrap,\n      'aurelia': coreBundles.aurelia.filter(pkg => coreBundles.bootstrap.indexOf(pkg) === -1)\n    },\n    output: {\n      path: outDir,\n    },\n    plugins: [\n        new CheckerPlugin()\n      ]\n  },\n\n  /**\n   * Don't be afraid, you can put bits of standard Webpack configuration here\n   * (or at the end, after the last parameter, so it won't get overwritten by the presets)\n   * Because that's all easy-webpack configs are - snippets of premade, maintained configuration parts!\n   * \n   * For Webpack docs, see: https://webpack.js.org/configuration/\n   */\n\n  ENV === 'test' || ENV === 'development' ? \n    envDev(ENV !== 'test' ? {} : {devtool: 'inline-source-map'}) :\n    envProd({ /* devtool: '...' */ }),\n\n  aurelia({root: rootDir, src: srcDir, title: title, baseUrl: baseUrl}),\n  typescript(ENV !== 'test' ? {} : { options: { doTypeCheck: false, sourceMap: true, inlineSourceMap: false, inlineSources: false } }),\n  html(),\n  css({ filename: 'styles.css', allChunks: true, sourceMap: true }),\n  fontAndImages(),\n  globalBluebird(),\n  globalJquery(),\n  generateIndexHtml({minify: ENV === 'production'}),\n\n  ...(ENV === 'production' || ENV === 'development' ? [\n      commonChunksOptimize({appChunkName: 'app', firstChunk: 'aurelia-bootstrap'}),\n      copyFiles({patterns: [{ from: 'favicon.ico', to: 'favicon.ico' }]})\n    ] : [\n    /* ENV === 'test' */\n    generateCoverage({ options: { esModules: true } })\n  ]),\n\n  ENV === 'production' ?\n    uglify({debug: false, mangle: { except: ['cb', '__webpack_require__'] }}) : {}\n);\n\nmodule.exports = stripMetadata(config);\n"]}